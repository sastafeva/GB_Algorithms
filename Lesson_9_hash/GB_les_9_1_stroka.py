# 1. Определение количества различных подстрок с использованием хеш-функции.
# Пусть на вход функции дана строка.
# Требуется вернуть количество различных подстрок в этой строке.
# Примечания:
# * в сумму не включаем пустую строку и строку целиком;
# * задача считается решённой, если в коде использована функция вычисления хеша (hash(), sha1()
# или любая другая из модуля hashlib)
# _______________________________________________________________________________

# Под пустой строкой я понимаю подстроку, у которой длина меньше 1.
# Т.е. если подстрока равна ' ' (один пробел) то ее все равно включаем.

# Строчные и заглавные буквы будут восприниматься, как разные.

from hashlib import sha1

# Сделаем проверку на непустую строку
s = ''
while len(s) < 1:

    s = input('Введите строку: ')

    if len(s) < 1:
        print('Вы ввели пустую строку, начните сначала')


# Будем хранить все найденные подстроки в множестве (чтобы сразу исключить повторения).
set_sub = set()

# Будем наполнять множество хэшами подстрок через цикл. Start будет "двигаться" от начала, а end с конца.

for start in range(len(s)):
    end = len(s)

    while len(s[start:end]) > 0:
        s_sub = sha1(s[start:end].encode('utf-8')).hexdigest()

        # Делаем проверку, чтобы подстрока не была равна самой строке
        if s_sub != sha1(s.encode('utf-8')).hexdigest():
            set_sub.add(s_sub)

        end -= 1

print(f'Количество подстрок в введенной строке: {len(set_sub)}')
